
@misc{center_for_history_and_new_media_zotero_????,
	title = {Zotero Quick Start Guide},
	url = {http://zotero.org/support/quick_start_guide},
	author = {{Center for History and New Media}},
	annote = {Welcome to Zotero!
View the Quick Start Guide to learn how to begin collecting, managing, citing, and sharing your research sources.
Thanks for installing Zotero.}
}

@inproceedings{aggarwal_software_2005,
	title = {Software reuse metrics for object-oriented systems},
	doi = {10.1109/SERA.2005.60},
	abstract = {The importance of software measurement is increasing leading to development of new measurement techniques. Reusing existing software components is a key feature in increasing software productivity. It is one of the key elements in object-oriented programming, which reduces the cost and increases the quality of the software. An important feature of C++ called templates support generic programming, which allows the programmer to develop reusable software modules such as functions, classes, etc. The need for software reusability metrics is particularly acute for an organization in order to measure the degree of generic programming included in the form of templates in code. This research addresses this need and introduces a new set of metrics for object-oriented software. Two metrics are proposed for measuring amount of genericty included in the code and then analytically evaluated against Weyuker's set of nine axioms. This set of metrics is then applied to standard projects and accordingly ways in which project managers can use these metrics are suggested.},
	booktitle = {Third {ACIS} International Conference on Software Engineering Research, Management and Applications, 2005},
	author = {Aggarwal, {K.K.} and Singh, Y. and Kaur, A. and Malhotra, R.},
	month = aug,
	year = {2005},
	keywords = {C++ language, C++ template, Costs, Functional programming, generic programming, Measurement techniques, Object oriented programming, object-oriented programming, object-oriented software, object-oriented system, Particle measurements, Productivity, Programming profession, software component reusability, software cost estimation, software cost reduction, software measurement, software metrics, software performance evaluation, software productivity, software quality, software reusability, software reusability metrics},
	pages = {48--54},
	file = {IEEE Xplore Abstract Record:/Users/pkro/Library/Application Support/Zotero/Profiles/7cmj7iam.default/zotero/storage/VW3KZNXE/articleDetails.html:text/html;IEEE Xplore Full Text PDF:/Users/pkro/Library/Application Support/Zotero/Profiles/7cmj7iam.default/zotero/storage/TW2NKJRT/Aggarwal et al. - 2005 - Software reuse metrics for object-oriented systems.pdf:application/pdf}
}

@article{mohagheghi_empirical_2008,
	title = {An Empirical Investigation of Software Reuse Benefits in a Large Telecom Product},
	volume = {17},
	issn = {1049-{331X}},
	url = {http://doi.acm.org/10.1145/1363102.1363104},
	doi = {10.1145/1363102.1363104},
	abstract = {Background. This article describes a case study on the benefits of software reuse in a large telecom product. The reused components were developed in-house and shared in a product-family approach. Methods. Quantitative data mined from company repositories are combined with other quantitative data and qualitative observations. Results. We observed significantly lower fault density and less modified code between successive releases of the reused components. Reuse and standardization of software architecture and processes allowed easier transfer of development when organizational changes happened. Conclusions. The study adds to the evidence of quality benefits of large-scale reuse programs and explores organizational motivations and outcomes.},
	number = {3},
	urldate = {2014-05-24},
	journal = {{ACM} Trans. Softw. Eng. Methodol.},
	author = {Mohagheghi, Parastoo and Conradi, Reidar},
	month = jun,
	year = {2008},
	keywords = {fault density, product family, risks, Software reuse, standardization},
	pages = {13:1{\textendash}13:31}
}