
@article{fayad_object-oriented_1997,
	title = {Object-oriented Application Frameworks},
	volume = {40},
	issn = {0001-0782},
	url = {http://doi.acm.org/10.1145/262793.262798},
	doi = {10.1145/262793.262798},
	number = {10},
	urldate = {2014-10-23TZ},
	journal = {Commun. {ACM}},
	author = {Fayad, Mohamed and Schmidt, Douglas C.},
	month = oct,
	year = {1997},
	pages = {32--38}
}

@article{mattsson_framework_1999,
	title = {Framework Integration Problems, Causes, Solutions},
	volume = {42},
	issn = {0001-0782},
	url = {http://doi.acm.org/10.1145/317665.317679},
	doi = {10.1145/317665.317679},
	number = {10},
	urldate = {2014-10-23TZ},
	journal = {Commun. {ACM}},
	author = {Mattsson, Michael and Bosch, Jan and Fayad, Mohamed E.},
	month = oct,
	year = {1999},
	pages = {80--87}
}

@article{brugali_framework_1997,
	title = {The Framework Life Span},
	volume = {40},
	issn = {0001-0782},
	url = {http://doi.acm.org/10.1145/262793.262806},
	doi = {10.1145/262793.262806},
	number = {10},
	urldate = {2014-10-23TZ},
	journal = {Commun. {ACM}},
	author = {Brugali, Davide and Menga, Giuseppe and Aarsten, Amund},
	month = oct,
	year = {1997},
	pages = {65--68}
}

@article{schmid_systematic_1997,
	title = {Systematic Framework Design by Generalization},
	volume = {40},
	issn = {0001-0782},
	url = {http://doi.acm.org/10.1145/262793.262803},
	doi = {10.1145/262793.262803},
	number = {10},
	urldate = {2014-10-23TZ},
	journal = {Commun. {ACM}},
	author = {Schmid, Han Albrecht},
	month = oct,
	year = {1997},
	pages = {48--51}
}

@article{fayad_enterprise_2000,
	title = {Enterprise Frameworks: Guidelines for Selection},
	volume = {32},
	issn = {0360-0300},
	shorttitle = {Enterprise Frameworks},
	url = {http://doi.acm.org/10.1145/351936.351940},
	doi = {10.1145/351936.351940},
	number = {1es},
	urldate = {2014-10-23TZ},
	journal = {{ACM} Comput. Surv.},
	author = {Fayad, Mohamed E. and Hamu, David S.},
	month = mar,
	year = {2000},
	keywords = {aspect-oriented frameworks, customization, distributed computing, enterprise frameworks, extensibility, framework economics, ojbect-orientation, software architecture, software stability}
}

@article{langford_generating_1994,
	title = {Generating and mapping population density surfaces within a geographical information system},
	volume = {31},
	issn = {0008-7041},
	url = {http://www.maneyonline.com.libproxy.aalto.fi/doi/abs/10.1179/000870494787073718},
	doi = {10.1179/000870494787073718},
	abstract = {Abstract The spatially discontinuous choropleth map is a poor representation of the underlying continuous distribution of population density. A possible alternative is to derive dasymetric maps at a fine spatial resolution by making use of satellite imagery in a geographical information system. However, there are cartographic problems when these maps are displayed and further processing is needed in order to obtain approximations to a continuous density surface. Isarithmic maps of these density surfaces retain a high degree of spatial accuracy while providing pleasing and highly adaptable presentations.The methods used to generate dasymetric and isarithmic maps are readily implemented in most raster based geographical information systems. For example, the classification of remotely sensed imagery, the subsequent processing and integration of data, and most of the cartographic display, were all undertaken in this work using the low cost {IDRISI} {GIS} that operates on standard {IBM} {PC} compatible hardware.},
	number = {1},
	urldate = {2014-10-22TZ},
	journal = {The Cartographic Journal},
	author = {Langford, M. and Unwin, D. J.},
	month = jun,
	year = {1994},
	pages = {21--26}
}

@book{dent_cartography:_2008,
	address = {New York},
	edition = {6 edition},
	title = {Cartography: Thematic Map Design},
	isbn = {9780072943825},
	shorttitle = {Cartography},
	abstract = {This introductory textbook introduces students to the different types of map projections, map design, and map production. Cartography is generally for a sophomore or junior level course for geography majors and many professors are beginning to introduce computer cartography throughout the course.},
	language = {English},
	publisher = {{McGraw}-Hill Science/Engineering/Math},
	author = {Dent, Borden and Torguson, Jeff and Hodler, Thomas},
	month = aug,
	year = {2008}
}

@article{bostock_code_2013,
	title = {Code as Cartography},
	volume = {50},
	issn = {0008-7041},
	url = {http://www.maneyonline.com.libproxy.aalto.fi/doi/abs/10.1179/0008704113Z.00000000078},
	doi = {10.1179/0008704113Z.00000000078},
	number = {2},
	urldate = {2014-10-22TZ},
	journal = {The Cartographic Journal},
	author = {Bostock, Michael and Davies, Jason},
	month = may,
	year = {2013},
	pages = {129--135}
}

@misc{osmani_essential_2011,
	title = {Essential {JavaScript} Namespacing Patterns},
	url = {http://addyosmani.com/blog/essential-js-namespacing/},
	author = {Osmani, Addy},
	month = sep,
	year = {2011},
	note = {Accessed 21.10.2014}
}

@misc{apple_uiwebview_2014,
	title = {{UIWebView} Class Reference},
	url = {https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIWebView_Class/index.html},
	author = {{Apple}},
	year = {2014},
	note = {Accessed 21.10.2014}
}

@misc{google_building_2014,
	title = {Building Web Apps in {WebView}},
	url = {http://developer.android.com/guide/webapps/webview.html},
	author = {{Google}},
	year = {2014},
	note = {Accessed 21.10.2014}
}

@misc{hunter_why_2014,
	title = {Why The {WebView} Is The Future Of Mac {OS} X Apps},
	url = {http://www.fastcolabs.com/3029292/why-the-webview-is-the-future-of-mac-os-x-apps},
	author = {Hunter, Leah},
	month = apr,
	year = {2014},
	note = {Accessed 21.10.2014}
}

@misc{small_ten_2012,
	title = {Ten Things You Need to Know About {WebView}},
	url = {http://blogs.msdn.com/b/wsdevsol/archive/2012/10/18/nine-things-you-need-to-know-about-webview.aspx},
	author = {Small, Matt},
	month = oct,
	year = {2012},
	note = {Accessed 21.10.2014}
}

@misc{statcounter_globalstats_2014,
	title = {{GlobalStats}},
	url = {http://gs.statcounter.com/},
	author = {{StatCounter}},
	year = {2014},
	note = {Accessed 21.10.2014}
}

@misc{manian_html5_2011,
	title = {{HTML}5 Please},
	url = {http://html5please.com/},
	author = {Manian, Divya and Irish, Paul and Branyen, Tim and Montgomery, Connor and Verbaten, Jake},
	month = jul,
	year = {2011},
	note = {Accessed 21.10.2014}
}

@inproceedings{jazayeri_trends_2007,
	title = {Some Trends in Web Application Development},
	doi = {10.1109/FOSE.2007.26},
	abstract = {A Web application is an application that is invoked with a Web browser over the Internet. Ever since 1994 when the Internet became available to the public and especially in 1995 when the World Wide Web put a usable face on the Internet, the Internet has become a platform of choice for a large number of ever-more sophisticated and innovative Web applications. In just one decade, the Web has evolved from being a repository of pages used primarily for accessing static, mostly scientific, information to a powerful platform for application development and deployment. New Web technologies, languages, and methodologies make it possible to create dynamic applications that represent a new model of cooperation and collaboration among large numbers of users. Web application development has been quick to adopt software engineering techniques of component orientation and standard components. For example, search, syndication, and tagging have become standard components of a new generation of collaborative applications and processes. Future developments in Web applications will be driven by advances in browser technology, Web Internet infrastructure, protocol standards, software engineering methods, and application trends.},
	booktitle = {Future of Software Engineering, 2007. {FOSE} '07},
	author = {Jazayeri, M.},
	month = may,
	year = {2007},
	keywords = {Access protocols, Application software, Collaboration, Informatics, Internet, Multimedia databases, Software engineering, Software standards, Standards development, Web Internet infrastructure, Web application development, Web browser, Web sites, World Wide Web, online front-ends},
	pages = {199--213}
}

@misc{agafonkin_leaflet_2011,
	title = {Leaflet},
	url = {http://www.leafletjs.com},
	author = {Agafonkin, Vladimir},
	month = may,
	year = {2011},
	note = {Accessed 13.10.2014}
}

@misc{metacarta_openlayers_2006,
	title = {{OpenLayers}},
	url = {http://www.openlayers.org},
	author = {{MetaCarta}},
	month = jun,
	year = {2006},
	note = {Accessed 13.10.2014}
}

@book{fenton_software_1998,
	address = {Boston, {MA}, {USA}},
	edition = {2nd},
	title = {Software Metrics: A Rigorous and Practical Approach},
	isbn = {0534954251},
	shorttitle = {Software Metrics},
	abstract = {From the Publisher:The Second Edition of Software Metrics provides an up-to-date, coherent, and rigorous framework for controlling, managing, and predicting software development processes. With an emphasis on real-world applications, Fenton and Pfleeger apply basic ideas in measurement theory to quantify software development resources, processes, and products.  The book offers an accessible and comprehensive introduction to software metrics, now an essential component of software engineering for both classroom and industry. Software Metrics features extensive case studies from Hewlett Packard, {IBM}, the U.S. Department of Defense, Motorola, and others, in addition to worked examples and exercises. The Second Edition includes up-to-date material on process maturity and measurement, goal-question-metric, planning a metrics program, measurement in
practice, experimentation, empirical studies, {ISO}9216, and metric tools.},
	publisher = {{PWS} Publishing Co.},
	author = {Fenton, Norman E. and Pfleeger, Shari Lawrence},
	year = {1998}
}

@article{chapin_types_2001,
	title = {Types of Software Evolution and Software Maintenance},
	volume = {13},
	issn = {1040-550X},
	url = {http://dl.acm.org/citation.cfm?id=371697.371701},
	number = {1},
	urldate = {2014-10-10TZ},
	journal = {Journal of Software Maintenance},
	author = {Chapin, Ned and Hale, Joanne E. and Kham, Khaled Md. and Ramil, Juan F. and Tan, Wui-Gee},
	month = jan,
	year = {2001},
	keywords = {empirical studies, evolution terminology, maintainer activities, maintenance terminology, software evolution management, software maintenance management, software support},
	pages = {3--30}
}

@article{gill_cyclomatic_1991,
	title = {Cyclomatic complexity density and software maintenance productivity},
	volume = {17},
	issn = {0098-5589},
	doi = {10.1109/32.106988},
	abstract = {A study of the relationship between the cyclomatic complexity metric (T. {McCabe}, 1976) and software maintenance productivity, given that a metric that measures complexity should prove to be a useful predictor of maintenance costs, is reported. The cyclomatic complexity metric is a measure of the maximum number of linearly independent circuits in a program control graph. The current research validates previously raised concerns about the metric on a new data set. However, a simple transformation of the metric is investigated whereby the cyclomatic complexity is divided by the size of the system in source statements. thereby determining a complexity density ratio. This complexity density ratio is demonstrated to be a useful predictor of software maintenance productivity on a small pilot sample of maintenance projects},
	number = {12},
	journal = {{IEEE} Transactions on Software Engineering},
	author = {Gill, G.K. and Kemerer, C.F.},
	month = dec,
	year = {1991},
	keywords = {Circuits, Control systems, Productivity, Programming, Software engineering, Software maintenance, Software measurement, Software performance, complexity density ratio, cyclomatic complexity metric, data set, linearly independent circuits, program control graph, software maintenance productivity, software metrics, software quality},
	pages = {1284--1288}
}

@article{banker_software_1993,
	title = {Software Complexity and Maintenance Costs},
	volume = {36},
	issn = {0001-0782},
	url = {http://doi.acm.org/10.1145/163359.163375},
	doi = {10.1145/163359.163375},
	number = {11},
	urldate = {2014-10-10TZ},
	journal = {Commun. {ACM}},
	author = {Banker, Rajiv D. and Datar, Srikant M. and Kemerer, Chris F. and Zweig, Dani},
	month = nov,
	year = {1993},
	keywords = {Productivity, Software maintenance, software complexity, software economics},
	pages = {81--94}
}

@article{mccabe_complexity_1976,
	title = {A Complexity Measure},
	volume = {{SE}-2},
	issn = {0098-5589},
	doi = {10.1109/TSE.1976.233837},
	abstract = {This paper describes a graph-theoretic complexity measure and illustrates how it can be used to manage and control program complexity. The paper first explains how the graph-theory concepts apply and gives an intuitive explanation of the graph concepts in programming terms. The control graphs of several actual Fortran programs are then presented to illustrate the correlation between intuitive complexity and the graph-theoretic complexity. Several properties of the graph-theoretic complexity are then proved which show, for example, that complexity is independent of physical size (adding or subtracting functional statements leaves complexity unchanged) and complexity depends only on the decision structure of a program.},
	number = {4},
	journal = {{IEEE} Transactions on Software Engineering},
	author = {McCabe, T.J.},
	month = dec,
	year = {1976},
	keywords = {Basis, Fluid flow measurement, Linear programming, National security, Programming, Software engineering, Software maintenance, Software measurement, Software systems, Software testing, System testing, complexity measure, control flow, decomposition, graph theory, independence, linear, modularization, reduction, software, testing},
	pages = {308--320}
}

@article{kitchenham_evaluating_1998,
	title = {Evaluating Software Eng. Methods and Tools Part 10: Designing and Running a Quantitative Case Study},
	volume = {23},
	issn = {0163-5948},
	shorttitle = {Evaluating Software Eng. Methods and Tools Part 10},
	url = {http://doi.acm.org/10.1145/279437.279445},
	doi = {10.1145/279437.279445},
	abstract = {In the last article we considered how to identify the context for a case study and how to define and validate a case study hypothesis. In this article, we continue my discussion of the eight steps involved in a quantitative case study by considering the remaining six steps: selecting the host projects; identifying the method of comparison; minimising the effect of confounding factors, planning the case study, monitoring the case study, analysing the results.},
	number = {3},
	urldate = {2014-10-09TZ},
	journal = {{SIGSOFT} Softw. Eng. Notes},
	author = {Kitchenham, Barbara Ann and Pickard, Lesley M.},
	month = may,
	year = {1998},
	pages = {20--22}
}

@article{horowitz_survey_1985,
	title = {A survey of Application Generators},
	volume = {2},
	issn = {0740-7459},
	doi = {10.1109/MS.1985.230048},
	abstract = {By encouraging the unsophisticated computer user to develop his own dataintensive programs, application generators can significantly improve software productivity.},
	number = {1},
	journal = {{IEEE} Software},
	author = {Horowitz, E. and Kemper, A and Narasimhan, B.},
	month = jan,
	year = {1985},
	keywords = {Application software, Computer languages, Costs, Documentation, Hardware, Productivity, Programming, Prototypes, Software engineering, Software prototyping},
	pages = {40--54}
}

@article{cleaveland_building_1988,
	title = {Building application generators},
	volume = {5},
	issn = {0740-7459},
	doi = {10.1109/52.17799},
	abstract = {The development of application generators, which offer increased productivity through customized reusable software, is addressed. Their advantages and drawbacks are first discussed. They describe a method, called the dialogue-code generation system, for building application generators, and discuss its use for various projects. Unix tools for building application generators are briefly considered.{\textless}{\textgreater}},
	number = {4},
	journal = {{IEEE} Software},
	author = {Cleaveland, J.C.},
	month = jul,
	year = {1988},
	keywords = {Application software, Automatic programming, Automatic testing, Buildings, Power generation, Productivity, Prototypes, Software design, Unix tools, application generators, art, dialogue-code generation system, reusable software, software tools},
	pages = {25--33}
}

@book{sametinger_software_1997,
	title = {Software engineering with reusable components},
	url = {http://www.google.com/books?hl=en&lr=&id=AxPQvGRs2wUC&oi=fnd&pg=PA1&dq=code+scavenging+reuse&ots=K85JD3_HCN&sig=66nJKlXrtJc3bHAtYMe4SCc2tTc},
	urldate = {2014-09-16TZ},
	publisher = {Springer},
	author = {Sametinger, Johannes},
	year = {1997}
}

@inproceedings{carro_high-level_2006,
	address = {New York, {NY}, {USA}},
	series = {{CASES} '06},
	title = {High-level Languages for Small Devices: A Case Study},
	isbn = {1-59593-543-6},
	shorttitle = {High-level Languages for Small Devices},
	url = {http://doi.acm.org/10.1145/1176760.1176794},
	doi = {10.1145/1176760.1176794},
	abstract = {In this paper we study, through a concrete case, the feasibility of using a high-level, general-purpose logic language in the design and implementation of applications targeting wearable computers. The case study is a "sound spatializer" which, given real-time signals for monaural audio and heading, generates stereo sound which appears to come from a position in space. The use of advanced compile-time transformations and optimizations made it possible to execute code written in a clear style without efficiency or architectural concerns on the target device, while meeting strict existing time and memory constraints. The final executable compares favorably with a similar implementation written in C. We believe that this case is representative of a wider class of common pervasive computing applications, and that the techniques we show here can be put to good use in a range of scenarios. This points to the possibility of applying high-level languages, with their associated exibility, conciseness, ability to be automatically parallelized, sophisticated compile-time tools for analysis and verification, etc., to the embedded systems eld without paying an unnecessary performance penalty.},
	urldate = {2014-09-16TZ},
	booktitle = {Proceedings of the 2006 International Conference on Compilers, Architecture and Synthesis for Embedded Systems},
	publisher = {{ACM}},
	author = {Carro, Manuel and Morales, José F. and Muller, Henk L. and Puebla, G. and Hermenegildo, M.},
	year = {2006},
	keywords = {(constraint) logic programming, optimizing compilation, program analysis and transformation, wearable computers},
	pages = {271--281}
}

@misc{sellier_less_2009,
	title = {{LESS}},
	url = {http://lesscss.org/},
	author = {Sellier, Alexis},
	year = {2009},
	note = {Accessed 7.9.2014}
}

@misc{ecma_ecmascript_2011,
	title = {{ECMAScript}® Language Specification},
	url = {http://www.ecma-international.org/ecma-262/5.1/},
	language = {English},
	journal = {{ECMAScript}® Language Specification},
	author = {ECMA},
	month = jun,
	year = {2011},
	note = {Accessed 7.9.2014},
	keywords = {*****, {RDF}, {RDFS}, {SPARQL}, Standards, W3C, linked data (general), semantic web}
}

@misc{world_wide_web_consortium_html5_2014,
	title = {{HTML}5},
	url = {http://www.w3.org/html/wg/drafts/html/CR/},
	language = {English},
	journal = {{HTML}5},
	author = {{World Wide Web Consortium}},
	month = sep,
	year = {2014},
	note = {Accessed 7.9.2014},
	keywords = {*****, {RDF}, {RDFS}, {SPARQL}, Standards, W3C, linked data (general), semantic web}
}

@misc{world_wide_web_consortium_cascading_2011,
	title = {Cascading Style Sheets Level 2 Revision 1 ({CSS} 2.1) Specification},
	url = {http://www.w3.org/TR/CSS2/},
	language = {English},
	journal = {Cascading Style Sheets Level 2 Revision 1 ({CSS} 2.1) Specification},
	author = {{World Wide Web Consortium}},
	month = jun,
	year = {2011},
	note = {Accessed 7.9.2014},
	keywords = {*****, {RDF}, {RDFS}, {SPARQL}, Standards, W3C, linked data (general), semantic web}
}

@misc{ashkenas_coffeescript_2009,
	title = {{CoffeeScript}},
	url = {http://coffeescript.org},
	author = {Ashkenas, Jeremy},
	month = dec,
	year = {2009},
	note = {Accessed 7.9.2014}
}

@book{mitchell_concepts_2003,
	title = {Concepts in Programming Languages},
	isbn = {9780521780988},
	abstract = {Concepts in Programming Languages elucidates the central concepts used in modern programming languages, such as functions, types, memory management, and control. The book is unique in its comprehensive presentation and comparison of major object-oriented programming languages. Separate chapters examine the history of objects, Simula and Smalltalk, and the prominent languages C++ and Java. The author presents foundational topics, such as lambda calculus and denotational semantics, in an easy-to-read, informal style, focusing on the main insights provided by these theories. Advanced topics include concurrency, concurrent object-oriented programming, program components, and inter-language interoperability. A chapter on logic programming illustrates the importance of specialized programming methods for certain kinds of problems.},
	language = {en},
	publisher = {Cambridge University Press},
	author = {Mitchell, John C.},
	year = {2003},
	keywords = {Computers / Computer Science, Computers / Programming / Object Oriented, Computers / Programming Languages / General, Computers / Software Development \& Engineering / General}
}

@inproceedings{totoo_haskell_2012,
	address = {New York, {NY}, {USA}},
	series = {{FHPC} '12},
	title = {Haskell vs. F\# vs. Scala: A High-level Language Features and Parallelism Support Comparison},
	isbn = {978-1-4503-1577-7},
	shorttitle = {Haskell vs. F\# vs. Scala},
	url = {http://doi.acm.org/10.1145/2364474.2364483},
	doi = {10.1145/2364474.2364483},
	abstract = {This paper provides a performance and programmability comparison of high-level parallel programming support in Haskell, F\# and Scala. Developing several parallel versions, we employ skeleton-based, semi-explicit and explicit approaches to parallelism. We focus on advanced language features for separating computational and coordination aspects of the code and tuning performance. We also assess the impact of functional purity and multi-paradigm design of the languages on program development and performance. Basis for these comparisons are several Barnes-Hut implementations of the n-body problem in all three languages, on both Linux and Windows. Our performance measurements on state-of-the-art multi-cores achieve a speedup up to 5.62 (on 8 cores) with a highly-tuned Haskell version. For comparable implementations in Scala and F\# we achieve speedups of 4.51 (on 8 cores) and 2.28 (on 4 cores), respectively. We observe that near best speedups are achieved using the highest level abstraction in these languages.},
	urldate = {2014-09-07TZ},
	booktitle = {Proceedings of the 1st {ACM} {SIGPLAN} Workshop on Functional High-performance Computing},
	publisher = {{ACM}},
	author = {Totoo, Prabhat and Deligiannis, Pantazis and Loidl, Hans-Wolfgang},
	year = {2012},
	keywords = {barnes-hut, f\#, haskell, n-body, parallelism, scala},
	pages = {49--60}
}

@book{leach_software_2012,
	title = {Software Reuse: Methods, Models, Costs},
	shorttitle = {Software Reuse},
	url = {http://www.google.com/books?hl=en&lr=&id=Y592AgAAQBAJ&oi=fnd&pg=PT21&dq=methods+for+software+reuse&ots=LVbmsvLEys&sig=rVg7IfOoMyrpsaxZuZ8aOQJHgjw},
	urldate = {2014-09-07TZ},
	publisher = {{AfterMath}},
	author = {Leach, Ronald J.},
	year = {2012}
}

@article{frakes_success_1994,
	title = {Success factors of systematic reuse},
	volume = {11},
	issn = {0740-7459},
	doi = {10.1109/52.311045},
	abstract = {Systematic software reuse is a paradigm shift in software engineering from building single systems to building families of related systems. The goal of software reuse research is to discover systematic procedures for engineering new systems from existing assets. Implementing systematic reuse is risky. Not doing it is also risky. Trying systematic reuse unsuccessfully can cost precious time and resources and may make management sceptical of trying it again. But if your competitors do it successfully and you do not, you may lose market share and possibly an entire market. There is no cookbook solution-each organization must analyze its own needs, implement reuse measurements, define the key benefits it expects, identify and remove impediments, and manage risk. Reliable data on how much this costs and the benefits an organization will derive are insufficient. The article addresses issues from management, measurement, law, economics, libraries, and the design of reusable software.{\textless}{\textgreater}},
	number = {5},
	journal = {{IEEE} Software},
	author = {Frakes, W.B. and Isoda, S.},
	month = sep,
	year = {1994},
	keywords = {Costs, {DP} management, Impedance, Resource management, Risk analysis, Software engineering, Software libraries, Software measurement, Software systems, Systems engineering and theory, design, economics, key benefits, libraries, reuse measurements, risk management, software engineering, software reusability, software reuse, success factors, systematic reuse},
	pages = {14--19}
}

@article{boehm_managing_1999,
	title = {Managing software productivity and reuse},
	volume = {32},
	issn = {0018-9162},
	doi = {10.1109/2.789755},
	abstract = {Your organization can choose from three main strategies for improving its software productivity. You can work faster, using tools that automate or speed up previously labor-intensive tasks. You can work smarter, primarily through process improvements that avoid or reduce non-value-adding tasks. Or you can avoid unnecessary work by reusing software artifacts instead of custom developing each project. Which strategy will produce the highest payoff? The author performed an extensive analysis that addressed this question for the {US} Department of Defense. The result of this analysis showed that work avoidance via software reuse produced the highest improvement in software productivity. The article gives advice on how to manage software reuse and the pitfalls to avoid},
	number = {9},
	journal = {Computer},
	author = {Boehm, B.},
	month = sep,
	year = {1999},
	keywords = {Airplanes, Computer aided instruction, Costs, Hardware, Internet, Investments, Lab-on-a-chip, Marine vehicles, Productivity, Workstations, non-value-adding tasks, process improvements, software artifacts, software development management, software process improvement, software productivity management, software reusability, software reuse management, work avoidance},
	pages = {111--113}
}

@inproceedings{mcilroy_mass-produced_1969,
	title = {Mass-produced Software Components},
	url = {http://homepages.cs.ncl.ac.uk/brian.randell/NATO/nato1968.PDF},
	abstract = {Software components (routines), to be widely applicable to different machines and users, should be available infamilies arranged according to precision, robustness, generality and timespace performance. Existing sources of com-ponents — manufacturers, software houses, users’ groups and algorithm collections — lack the breadth of interest orcoherence of purpose to assemble more than one or two members of such families, yet software production in the largewould be enormously helped by the availability of spectra of high quality routines, quite as mechanical design is abet-ted by the existence of families of structural shapes, screws or resistors. The talk will examine the kinds of variabilitynecessary in software components, ways of producing useful inventories, types of components that are ripe for suchstandardization, and methods of instituting pilot production.},
	urldate = {2014-08-08TZ},
	author = {Mcilroy, Doug},
	editor = {Buxton, JM and Naur, P and Randell, B},
	month = jan,
	year = {1969},
	keywords = {api, library, reference, software},
	pages = {138--155}
}

@article{krueger_software_1992,
	title = {Software Reuse},
	volume = {24},
	issn = {0360-0300},
	url = {http://doi.acm.org/10.1145/130844.130856},
	doi = {10.1145/130844.130856},
	abstract = {Software reuse is the process of creating software systems from existing software rather than building software systems from scratch. This simple yet powerful vision was introduced in 1968. Software reuse has, however, failed to become a standard software engineering practice. In an attempt to understand why, researchers have renewed their interest in software reuse and in the obstacles to implementing it.
This paper surveys the different approaches to software reuse found in the research literature. It uses a taxonomy to describe and compare the different approaches and make generalizations about the field of software reuse. The taxonomy characterizes each reuse approach in terms of its reusable artifacts and the way these artifacts are  abstracted, selected, specialized, and integrated.
Abstraction plays a central role in software reuse. Concise and expressive abstractions are essential if software artifacts are to be effectively reused. The effectiveness of a reuse technique can be evaluated in terms of cognitive distance—an intuitive gauge of the intellectual effort required to use the technique. Cognitive distance is reduced in two ways: (1) Higher level abstractions in a reuse technique reduce the effort required to go from the initial concept of a software system to representations in the reuse technique, and (2) automation reduces the effort required to go from abstractions in a reuse technique to an executable implementation.
This  survey  will help answer the following questions: What is software reuse? Why reuse software? What are the different approaches to reusing software? How effective are the different approaches? What is required to implement a software reuse technology? Why is software reuse difficult? What are the open areas for research in software reuse?},
	number = {2},
	urldate = {2014-07-31TZ},
	journal = {{ACM} Comput. Surv.},
	author = {Krueger, Charles W.},
	month = jun,
	year = {1992},
	keywords = {abstraction, cognitive distance, software reuse},
	pages = {131--183}
}

@article{johnson_frameworkscomponents+_1997,
	title = {Frameworks=(components+ patterns)},
	volume = {40},
	url = {http://dl.acm.org/citation.cfm?id=262799},
	number = {10},
	urldate = {2014-07-31TZ},
	journal = {Communications of the {ACM}},
	author = {Johnson, Ralph E.},
	year = {1997},
	pages = {39--42}
}

@inproceedings{weber_data_2012,
	title = {Data Visualization in Online Journalism and Its Implications for the Production Process},
	doi = {10.1109/IV.2012.65},
	abstract = {Data stories – this buzzword links together two different disciplines: computer science and journalism. The new relationship is called data-driven journalism. The emerging product of this relationship: data-based visualization that reveals the story behind the data. However, who produces those "data stories"? A journalist, an information designer, a computer scientist, or a team? New formats often implicate new workflows and a new way of thinking. This paper sets data visualization in the context of online journalism by focusing on the production process. We interviewed 19 experts of German, Swiss, and American media companies: designers, programmers, and journalists. For the analysis of the interviews we used the grounded theory approach. The findings show: The crucial success factor in the production process of data-based visualization in journalism is the attitude that everyone in the team acts as a journalist – no matter whether programmer, designer or statistician. A case study of the New York Times newsroom illustrates our findings.},
	booktitle = {2012 16th International Conference on Information Visualisation ({IV})},
	author = {Weber, W. and Rall, H.},
	month = jul,
	year = {2012},
	keywords = {American media companies, Collaboration, Computer science, Data visualization, German media companies, Interviews, Media, New York Times newsroom, Production, Swiss media companies, attitude, data driven journalism, data stories, data visualisation, data-based visualization, data-driven journalism, grounded theory, information networks, information resources, interactive information graphic, online journalism, production process, sketching, storyboard, visualization},
	pages = {349--356}
}

@article{berners-lee_world-wide_1992,
	title = {World-Wide Web: The Information Universe},
	volume = {2},
	issn = {1066-2243},
	shorttitle = {World-Wide Web},
	url = {http://www.emeraldinsight.com.libproxy.aalto.fi/journals.htm?articleid=1670698&show=abstract},
	doi = {10.1108/eb047254},
	number = {1},
	urldate = {2014-07-23TZ},
	journal = {Internet Research},
	author = {Berners-Lee, Tim and Cailliau, Robert and Groff, Jean-François and Pollermann, Bernd},
	month = dec,
	year = {1992},
	pages = {52--58}
}

@misc{berners-lee_information_1989,
	title = {Information Management: A Proposal},
	url = {http://www.w3.org/History/1989/proposal.html},
	language = {English},
	urldate = {2014-07-23},
	publisher = {{CERN}},
	author = {Berners-Lee, Tim},
	month = mar,
	year = {1989}
}

@misc{google_maps_2005,
	title = {Maps {API}},
	url = {http://maps.google.com},
	urldate = {2014-07-23},
	publisher = {Google Inc.},
	author = {Google},
	month = jun,
	year = {2005},
	note = {Accessed 23.7.2014}
}

@misc{google_maps_2005-1,
	title = {Maps},
	url = {http://maps.google.com},
	urldate = {2014-07-23},
	publisher = {Google Inc.},
	author = {Google},
	month = feb,
	year = {2005},
	note = {Accessed 25.7.2014}
}

@article{kraak_cartographic_1998,
	title = {The Cartographic Visualization Process: From Presentation to Exploration},
	volume = {35},
	issn = {0008-7041},
	shorttitle = {The Cartographic Visualization Process},
	url = {http://www.maneyonline.com.libproxy.aalto.fi/doi/abs/10.1179/caj.1998.35.1.11},
	doi = {10.1179/caj.1998.35.1.11},
	abstract = {Abstract In the context of spatial data handling, the cartographic visualization process is considered to be the translation or conversion of spatial data from a database into graphics. The cartographic visualization process is changing: changing from being supply-driven to demand-driven. More people will be involved in making maps. More maps will be created, many of them only for a single purpose. These maps are changing from being final products presenting spatial information to interim products that facilitate our visual thinking. These changes require a different type of cartographer, someone who is an integral part in the process of spatial data handling. As well as traditional cartographic design skills, cartographers must make their knowledge available to fellow geoscientists using interactive real-time maps to solve their problems. A challenge for cartographers is to create or improve mapping tools that allow exploration.},
	number = {1},
	urldate = {2014-07-23TZ},
	journal = {The Cartographic Journal},
	author = {Kraak, Menno-Jan},
	month = jun,
	year = {1998},
	keywords = {3D cartography, {ANIMATED} {SIMULTANEOUS} {CONTRAST}, {ANIMATION}, {CARTOGRAPHIC} {STYLE}, {CLUSTER} {ANALYSIS}, Cartography, {DYNAMIC} {MAPS}, {EUROPE}, {INTERACTIVITY}, {REPRESENTING} {CHANGE}, {TOPOGRAPHIC} {MAP}, {USER} {TESTING}, aesthetics, cylindrical projection, design, panorama, surface deformation, terrain bending},
	pages = {11--15}
}

@article{andrienko_interactive_1999,
	title = {Interactive maps for visual data exploration},
	volume = {13},
	issn = {1365-8816},
	url = {http://dx.doi.org/10.1080/136588199241247},
	doi = {10.1080/136588199241247},
	abstract = {Descartes (formerly called {IRIS}) is a software system designed to support visual exploration of spatially referenced data, e.g. demographic, economical, or cultural information about geographical objects or locations such as countries, districts, or cities. Descartes offers two integrated services: automated presentation of data on maps, and facilities to interactively manipulate these maps. Automated mapping is enabled by incorporating generic knowledge on map design into the system. Descartes selects suitable presentation methods according to characteristics of the variables to be analysed and relationships among those variables if more than one were selected simultaneously. The cartographic knowledge of Descartes allows non-cartographers to receive proper presentations of their data, and the automation of map construction helps the users to save valuable time that can better be used for data analysis and problem-solving. Exploratory data analysis requires highly interactive, dynamic data displays. We strive to develop various interactive techniques for map manipulation that could enhance the expressiveness of maps and thus promote data exploration. We are convinced that a technique can be made especially productive if it is directed towards a particular presentation method: it can utilise peculiarities of this method and support those analytical operations that best fit to the method.},
	number = {4},
	urldate = {2014-07-23TZ},
	journal = {International Journal of Geographical Information Science},
	author = {Andrienko, Gennady L. and Andrienko, Natalia V.},
	year = {1999},
	pages = {355--374}
}

@inproceedings{inbar_minimalism_2007,
	address = {New York, {NY}, {USA}},
	series = {{ECCE} '07},
	title = {Minimalism in Information Visualization: Attitudes Towards Maximizing the Data-ink Ratio},
	isbn = {978-1-84799-849-1},
	shorttitle = {Minimalism in Information Visualization},
	url = {http://doi.acm.org/10.1145/1362550.1362587},
	doi = {10.1145/1362550.1362587},
	abstract = {Motivation -- To evaluate people's acceptance of the minimalist approach to information visualization. Research approach -- Eighty seven students, divided into three experimental conditions, rated their preference for two different graphs displaying identical information - a standard bar-graph and a minimalist version. Both versions were taken from Tufte (1983). Findings/Design -- The results indicate a clear preference of non-minimalist bar-graphs, suggesting low acceptance of minimalist design principles such as high data-ink ratio. Research limitations/Implications -- Subjects had no prior experience with the minimalist graph and therefore familiarity might have an effect on the results. Originality/Value -- The research contributes empirical results on people's preferences to the mostly theoretical/ideological debate over approaches to the presentation of quantitative information. Take away message -- People did not like Tufte's minimalist design of bar-graphs; they seem to prefer "chartjunk" instead.},
	urldate = {2014-07-22TZ},
	booktitle = {Proceedings of the 14th European Conference on Cognitive Ergonomics: Invent! Explore!},
	publisher = {{ACM}},
	author = {Inbar, Ohad and Tractinsky, Noam and Meyer, Joachim},
	year = {2007},
	keywords = {Tufte, chartjunk, information visualization, minimalist design},
	pages = {185--188}
}

@misc{manovich_data_2002,
	title = {Data Visualization as New Abstraction and Anti-Sublime},
	url = {http://manovich.net/index.php/projects/data-visualisation-as-new-abstraction-and-anti-sublime},
	abstract = {Lev Manovich: photos, bio, complete {CV}.},
	urldate = {2014-07-22TZ},
	author = {Manovich, Lev},
	month = aug,
	year = {2002},
	keywords = {Data visualization, Lev Manovich, Manovich, big data, digital humanities, information visualization, media theory, new media, new media art, software studies, visualization}
}

@inproceedings{kosara_visualization_2007,
	title = {Visualization Criticism - The Missing Link Between Information Visualization and Art},
	doi = {10.1109/IV.2007.130},
	abstract = {Classifications of visualization are often based on technical criteria, and leave out artistic ways of visualizing information. Understanding the differences between information visualization and other forms of visual communication provides important insights into the way the field works, though, and also shows the path to new approaches. We propose a classification of several types of information visualization based on aesthetic criteria. The notions of artistic and pragmatic visualization are introduced, and their properties discussed. Finally, the idea of visualization criticism is proposed, and its rules are laid out. Visualization criticism bridges the gap between design, art, and technical/pragmatic information visualization. It guides the view away from implementation details and single mouse clicks to the meaning of a visualization.},
	booktitle = {Information Visualization, 2007. {IV} '07. 11th International Conference},
	author = {Kosara, R.},
	month = jul,
	year = {2007},
	keywords = {Bridges, Computer graphics, Computer science, Concrete, Data visualization, Handicapped aids, Joining processes, Mice, aesthetic criteria, art, computational linguistics, data visualisation, information visualization, missing link, pragmatic visualization, visual communication, visualization criticism},
	pages = {631--636}
}

@book{azzam_j-b_2013,
	address = {Somerset, {NJ}, {USA}},
	title = {J-B {PE} Single Issue (Program) Evaluation, Volume 139 : Data Visualization, Part 1 : New Directions for Evaluation},
	isbn = {9781118793374},
	shorttitle = {J-B {PE} Single Issue (Program) Evaluation, Volume 139},
	url = {http://site.ebrary.com.libproxy.aalto.fi/lib/aalto/docDetail.action?docID=10768989},
	urldate = {2014-07-22TZ},
	publisher = {John Wiley \& Sons},
	author = {Azzam, Tarek and Evergreen, Stephanie},
	year = {2013},
	keywords = {Evaluation research (Social action programs), Information visualization., Social surveys.}
}

@book{ware_information_2004,
	address = {Burlington, {MA}, {USA}},
	title = {Information Visualization : Perception for Design (2nd Edition)},
	isbn = {9780080478494},
	shorttitle = {Information Visualization},
	url = {http://site.ebrary.com.libproxy.aalto.fi/lib/aalto/docDetail.action?docID=10254679},
	urldate = {2014-07-22TZ},
	publisher = {Morgan Kaufmann},
	author = {Ware, Colin},
	year = {2004},
	keywords = {Engineering inspection., Information visualization -- Data processing., Quality control.}
}

@book{slocum_thematic_2014,
	edition = {3rd},
	title = {Thematic Cartography and Geovisualization: Pearson New International Edition},
	isbn = {9781292055442},
	shorttitle = {Thematic Cartography and Geovisualization},
	url = {https://www.dawsonera.com/abstract/9781292055442},
	abstract = {dawsonera.com: Direct access to your library's ebook collection},
	urldate = {2014-07-22TZ},
	publisher = {Pearson Education},
	author = {Slocum, Terry A. and McMaster, Robert B.},
	year = {2014}
}

@article{schlichtmann_visualization_2002,
	title = {Visualization in thematic cartography: towards a framework},
	shorttitle = {Visualization in thematic cartography},
	url = {http://rcswww.urz.tu-dresden.de/~wolodt/tc-com/pdf/sch_2000.pdf},
	urldate = {2014-07-21TZ},
	journal = {The Selected Problems of Theoretical Cartography},
	author = {Schlichtmann, Hansgeorg},
	year = {2002},
	note = {Accessed 2014-07-21},
	pages = {49--61}
}

@book{kraak_cartography_2011,
	title = {Cartography, Third Edition: Visualization of Spatial Data},
	isbn = {9781609181949},
	shorttitle = {Cartography, Third Edition},
	abstract = {Integrating cutting-edge technology with traditional cartographic principles, this text provides a framework for effectively visualizing and analyzing geospatial data. It gives students critical concepts and methods for harnessing the enormous amount of geospatial data that is available on the Internet and creating maps that can support real-world decision making. The writing style is straightforward and accessible. Illustrated throughout with highly instructive diagrams and sample maps, the book includes 58 color plates.},
	language = {en},
	publisher = {Guilford Press},
	author = {Kraak, Menno-Jan and Ormeling, Ferjan},
	month = jun,
	year = {2011},
	keywords = {Social Science / Human Geography, Social Science / Methodology, Technology \& Engineering / Cartography, Technology \& Engineering / Social Aspects}
}

@article{bartz_petchenik_place_1979,
	title = {From Place to Space: The Psychological Achievement of Thematic Mapping},
	volume = {6},
	issn = {0094-1689},
	shorttitle = {From Place to Space},
	url = {http://www.tandfonline.com/doi/abs/10.1559/152304079784022763},
	doi = {10.1559/152304079784022763},
	abstract = {A fundamental distinction between "reference" and "thematic" mapping is common in cartography, but existing analytical literature on the nature of this distinction does not make completely clear why such verbal emphasis on two classes of mapping has emerged, nor exactly what the differentiating criteria are. In this article, emphasis shifts from the map itself to the meaning of the map for the percipient. Using this point of view, a fundamental (and hierarchical) reference/thematic distinction is proposed. The meaning of reference maps originates in direct locational experience—the act of pointing to places as objects, "here is …". Thematic maps, in contrast, deal with the intellectual construct of space, with knowledge about space rather than experience in space.},
	number = {1},
	urldate = {2014-07-21TZ},
	journal = {The American Cartographer},
	author = {Bartz Petchenik, Barbara},
	year = {1979},
	pages = {5--12}
}

@misc{_thematic_2014,
	title = {Thematic map},
	copyright = {Creative Commons Attribution-{ShareAlike} License},
	url = {http://en.wikipedia.org/w/index.php?title=Thematic_map&oldid=609866622},
	abstract = {A thematic map is a type of map or chart especially designed to show a particular theme connected with a specific geographic area. These maps "can portray physical, social, political, cultural, economic, sociological, agricultural, or any other aspects of a city, state, region, nation, or continent".[1]},
	language = {en},
	urldate = {2014-07-21TZ},
	journal = {Wikipedia, the free encyclopedia},
	month = jul,
	year = {2014},
	note = {Page Version {ID}: 609866622}
}

@incollection{barkowsky_cognitive_1997,
	series = {Lecture Notes in Computer Science},
	title = {Cognitive requirements on making and interpreting maps},
	copyright = {©1997 Springer-Verlag},
	isbn = {978-3-540-63623-6, 978-3-540-69616-2},
	url = {http://link.springer.com.libproxy.aalto.fi/chapter/10.1007/3-540-63623-4_60},
	abstract = {We present an approach to modeling human interpretation of (real) geographic maps. While in Geographic Information Systems ({GIS}) the limitations for describing geographic knowledge mainly stem from the limitations of this knowledge itself, paper maps pose additional constraints on the representation of spatial configurations. We examine maps as representation media with respect to cartographic restrictions involved in the map making process. Some cognitive factors of cartographic generalization are indicated. We present our aspect map approach allowing for describing maps formally as pictorial representations. The approach postulates the use of meta-knowledge to enable adequate map interpretation. Phenomena of cartographic interpretation and misinterpretation are illustrated employing two kinds of hierarchic structures of spatial aspects of maps. The notions we present can be employed in augmenting the ‘cognitive adequacy’ of automated map making and map reading.},
	number = {1329},
	urldate = {2014-05-30TZ},
	booktitle = {Spatial Information Theory A Theoretical Basis for {GIS}},
	publisher = {Springer Berlin Heidelberg},
	author = {Barkowsky, Thomas and Freksa, Christian},
	editor = {Hirtle, Stephen C. and Frank, Andrew U.},
	month = jan,
	year = {1997},
	keywords = {Artificial Intelligence (incl. Robotics), Computer Applications in Geosciences, Data Structures, Database Management, Geographical Information Systems/Cartography},
	pages = {347--361}
}

@incollection{klippel_cognitive_2005,
	title = {The Cognitive Reality of Schematic Maps},
	copyright = {©2005 Springer-Verlag Berlin Heidelberg},
	isbn = {978-3-540-23055-7, 978-3-540-26982-3},
	url = {http://link.springer.com.libproxy.aalto.fi/chapter/10.1007/3-540-26982-7_5},
	abstract = {In graphics and language, schematisation is an important method to emphasize certain aspects and to deemphasize others. Different disciplines use schematisation for different reasons. In cartography, graphic schematisation is one aspect of map generalisation. In contrast, cognitive science addresses schematisation as a method to intentionally emphasize certain aspects of knowledge beyond technical necessity; therefore, the notion of schematic map is proposed to denote maps that employ schematisation for cognitive representational reasons. This chapter discusses different views of schematisation from cartography, linguistics, and artificial intelligence. Connections to qualitative reasoning in artificial intelligence are drawn. We address human spatial cognition and present examples of task-oriented representations. Finally, multimodality for conveying spatial knowledge and its application in schematic maps are discussed.},
	urldate = {2014-05-30TZ},
	booktitle = {Map-based Mobile Services},
	publisher = {Springer Berlin Heidelberg},
	author = {Klippel, Alexander and Richter, Kai-Florian and Barkowsky, Thomas and Freksa, Christian},
	editor = {Meng, Prof Dr L. and Reichenbacher, Dr T. and Zipf, Prof Dr A.},
	month = jan,
	year = {2005},
	keywords = {Computer Applications in Geosciences, Geographical Information Systems/Cartography, Geography (general), Math. Applications in Geosciences, Multimedia Information Systems},
	pages = {55--71}
}

@incollection{meng_map-based_2005,
	title = {Map-based mobile services},
	copyright = {©2005 Springer-Verlag Berlin Heidelberg},
	isbn = {978-3-540-23055-7, 978-3-540-26982-3},
	url = {http://link.springer.com.libproxy.aalto.fi/chapter/10.1007/3-540-26982-7_1},
	abstract = {This chapter gives a general introduction into map-based mobile services which are considered as value-added location-based services. Starting from an overview of digital map types, their rapidly growing affordances and required learning efforts, the natures and design constraints of offline screen maps, web maps and mobile maps are comparatively studied. The aspects of immediate usability are highlighted as a central thread drawing together the essential research challenges involved in the design process of user-centred mobile maps.},
	urldate = {2014-05-30TZ},
	booktitle = {Map-based Mobile Services},
	publisher = {Springer Berlin Heidelberg},
	author = {Meng, Liqiu and Reichenbacher, Tumasch},
	editor = {Meng, Prof Dr L. and Reichenbacher, Dr T. and Zipf, Prof Dr A.},
	month = jan,
	year = {2005},
	keywords = {Computer Applications in Geosciences, Geographical Information Systems/Cartography, Geography (general), Math. Applications in Geosciences, Multimedia Information Systems},
	pages = {1--10}
}

@incollection{huang_technical_2012,
	series = {Lecture Notes in Geoinformation and Cartography},
	title = {A Technical Survey on Decluttering of Icons in Online Map-Based Mashups},
	copyright = {©2012 Springer-Verlag Berlin Heidelberg},
	isbn = {978-3-642-27484-8, 978-3-642-27485-5},
	url = {http://link.springer.com.libproxy.aalto.fi/chapter/10.1007/978-3-642-27485-5_11},
	abstract = {Recent years have witnessed rapid advances in online map-based mashups with Application Programming Interfaces ({APIs}) and web services. Map-based mashups often display different kinds of information (e.g., {POIs}, represented as icons) on base maps, such as Google Maps and Bing Maps. The visualization of large number of icons in a map on web browsers or mobile devices often results in the icon cluttering problem with icons touching and overlapping each other. This problem decreases map legibility, and thus prevents users from effectively processing the information presented in the map. It also leads to a dramatic degradation of performance, and a high transmission load. All these problems will greatly decrease the usability of a mashup application. This paper surveys and assesses approaches from different disciplines (i.e., computer science and cartography) for avoiding icon cluttering in online map-based mashups. We focus on two issues: filtering of irrelevant {POIs}, and icon placement and aggregation. Different techniques from information filtering research are analyzed and compared for reducing the number of icons to be displayed in a map. For the latter issue, approaches of aggregating and placing icons from map generalization research are discussed and assessed for their applicability in online mashups. Some related {APIs} and typical mashup examples are also discussed and compared. This paper concludes that in order to provide more cartographically pleasing maps in mashups, techniques from computer science and cartography should be seamlessly integrated.},
	language = {en},
	urldate = {2014-05-30TZ},
	booktitle = {Online Maps with {APIs} and {WebServices}},
	publisher = {Springer Berlin Heidelberg},
	author = {Huang, Haosheng and Gartner, Georg},
	editor = {Peterson, Michael P.},
	month = jan,
	year = {2012},
	keywords = {Geographical Information Systems/Cartography},
	pages = {157--175}
}

@book{tufte_visual_1986,
	address = {Cheshire, {CT}, {USA}},
	title = {The Visual Display of Quantitative Information},
	isbn = {0-9613921-0-X},
	publisher = {Graphics Press},
	author = {Tufte, Edward R.},
	year = {1986}
}

@article{fabrikant_introduction:_2009,
	title = {Introduction: Cognitive Issues in Geographic Information Visualization},
	volume = {44},
	shorttitle = {Introduction},
	url = {http://dx.doi.org/10.3138/carto.44.3.139},
	doi = {10.3138/carto.44.3.139},
	number = {3},
	urldate = {2014-05-29TZ},
	journal = {Cartographica: The International Journal for Geographic Information and Geovisualization},
	author = {Fabrikant, Sara Irina and Lobben, Amy},
	month = jan,
	year = {2009},
	pages = {139--143}
}

@inproceedings{van_der_merwe_gis_2003,
	title = {{GIS}, Maps and Visualisation},
	url = {http://icaci.org/files/documents/ICC_proceedings/ICC2003/Papers/523.pdf},
	urldate = {2014-05-29TZ},
	booktitle = {Proceedings of the 21st International Cartographic Conference ({ICC})},
	author = {van Der Merwe, FRITZ},
	year = {2003}
}

@article{slocum_cognitive_2001,
	title = {Cognitive and Usability Issues in Geovisualization},
	volume = {28},
	issn = {1523-0406},
	url = {http://dx.doi.org/10.1559/152304001782173998},
	doi = {10.1559/152304001782173998},
	abstract = {We provide a research agenda for the International Cartographic Association's Commission on Visualization and Virtual Environment Working Group on Cognitive and Usability Issues in Geovisualization. Developments in hardware and software have led to (and will continue to stimulate) numerous novel methods for visualizing geospatial data. It is our belief that these novel methods will be of little use if they are not developed within a theoretical cognitive framework and iteratively tested using usability engineering principles. We argue that cognitive and usability issues should be considered in the context of six major research themes: 1) geospatial virtual environments ({GeoVEs}); 2) dynamic representations (including animated and interactive maps); 3) metaphors and schemata in user interface design; 4) individual and group differences; 5) collaborative geovisualization; and 6) evaluating the effectiveness of geovisualization methods. A key point underlying our use of theoretical cognitive principles is that traditional cognitive theory for static two-dimensional maps may not be applicable to interactive three-dimensional immersive {GeoVEs} and dynamic representations—thus new cognitive theory may need to be developed. Usability engineering extends beyond the traditional cartographic practice of "user testing" by evaluating software effectiveness throughout a lifecycle (including design, development, and deployment). Applying usability engineering to geovisualization, however, may be problematic because of the novelty of geovisualization and the associated difficulty of defining the nature of users and their tasks. Tackling the research themes is likely to require an interdisciplinary effort involving geographic information scientists, cognitive scientists, usability engineers, computer scientists, and others.},
	number = {1},
	urldate = {2014-05-29TZ},
	journal = {Cartography and Geographic Information Science},
	author = {Slocum, Terry A. and Blok, Connie and Jiang, Bin and Koussoulakou, Alexandra and Montello, Daniel R. and Fuhrmann, Sven and Hedley, Nicholas R.},
	year = {2001},
	pages = {61--75}
}

@incollection{engemaier_cartoservice:_2011,
	title = {{CartoService}: a web service framework for quality on-demand geovisualisation},
	shorttitle = {{CartoService}},
	url = {http://link.springer.com.libproxy.aalto.fi/chapter/10.1007/978-3-642-21928-3_23},
	urldate = {2014-05-29TZ},
	booktitle = {Computational Science and Its Applications-{ICCSA} 2011},
	publisher = {Springer},
	author = {Engemaier, Rita and Asche, Hartmut},
	year = {2011},
	pages = {329--341}
}

@incollection{asche_concept_2012,
	title = {From concept to implementation: web-based cartographic visualisation with {CartoService}},
	shorttitle = {From concept to implementation},
	url = {http://link.springer.com.libproxy.aalto.fi/chapter/10.1007/978-3-642-31075-1_31},
	urldate = {2014-05-29TZ},
	booktitle = {Computational Science and Its Applications–{ICCSA} 2012},
	publisher = {Springer},
	author = {Asche, Hartmut and Engemaier, Rita},
	year = {2012},
	pages = {414--424}
}

@incollection{zhang_reuse_2005,
	series = {Lecture Notes in Computer Science},
	title = {Reuse without Compromising Performance: Industrial Experience from {RPG} Software Product Line for Mobile Devices},
	copyright = {©2005 Springer-Verlag Berlin Heidelberg},
	isbn = {978-3-540-28936-4, 978-3-540-32064-7},
	shorttitle = {Reuse without Compromising Performance},
	url = {http://link.springer.com.libproxy.aalto.fi/chapter/10.1007/11554844_7},
	abstract = {It is often believed that reusable solutions, being generic, must necessarily compromise performance. In this paper, we consider a family of Role-Playing Games ({RPGs}). We analyzed similarities and differences among four {RPGs}. By applying a reuse technique of {XVCL}, we built an {RPG} product line architecture ({RPG}-{PLA}) from which we could derive any of the four {RPGs}. We built into the {RPG}-{PLA} a number of performance optimization strategies that could benefit any of the four (and possibly other similar) {RPGs}. By comparing the original vs. the new {RPGs} derived from the {RPG}-{PLA}, we demonstrated that reuse allowed us to achieve improved performance, both speed and memory utilization, as compared to each game developed individually. At the same time, our solution facilitated rapid development of new games, for new mobile devices, as well as ease of evolving with new features the {RPG}-{PLA} and custom games already in use.},
	number = {3714},
	urldate = {2014-05-29TZ},
	booktitle = {Software Product Lines},
	publisher = {Springer Berlin Heidelberg},
	author = {Zhang, Weishan and Jarzabek, Stan},
	editor = {Obbink, Henk and Pohl, Klaus},
	month = jan,
	year = {2005},
	keywords = {Computers and Society, Management of Computing and Information Systems, Software engineering},
	pages = {57--69}
}

@inproceedings{basit_detecting_2005,
	address = {New York, {NY}, {USA}},
	series = {{ESEC}/{FSE}-13},
	title = {Detecting Higher-level Similarity Patterns in Programs},
	isbn = {1-59593-014-0},
	url = {http://doi.acm.org/10.1145/1081706.1081733},
	doi = {10.1145/1081706.1081733},
	abstract = {Cloning in software systems is known to create problems during software maintenance. Several techniques have been proposed to detect the same or similar code fragments in software, so-called simple clones. While the knowledge of simple clones is useful, detecting design-level similarities in software could ease maintenance even further, and also help us identify reuse opportunities. We observed that recurring patterns of simple clones - so-called structural clones - often indicate the presence of interesting design-level similarities. An example would be patterns of collaborating classes or components. Finding structural clones that signify potentially useful design information requires efficient techniques to analyze the bulk of simple clone data and making non-trivial inferences based on the abstracted information. In this paper, we describe a practical solution to the problem of detecting some basic, but useful, types of design-level similarities such as groups of highly similar classes or files. First, we detect simple clones by applying conventional token-based techniques. Then we find the patterns of co-occurring clones in different files using the Frequent Itemset Mining ({FIM}) technique. Finally, we perform file clustering to detect those clusters of highly similar files that are likely to contribute to a design-level similarity pattern. The novelty of our approach is application of data mining techniques to detect design level similarities. Experiments confirmed that our method finds many useful structural clones and scales up to big programs. The paper describes our method for structural clone detection, a prototype tool called Clone Miner that implements the method and experimental results.},
	urldate = {2014-05-29TZ},
	booktitle = {Proceedings of the 10th European Software Engineering Conference Held Jointly with 13th {ACM} {SIGSOFT} International Symposium on Foundations of Software Engineering},
	publisher = {{ACM}},
	author = {Basit, Hamid Abdul and Jarzabek, Stan},
	year = {2005},
	keywords = {clone detection, similarity patterns, software clones},
	pages = {156--165}
}

@article{selby_enabling_2005,
	title = {Enabling reuse-based software development of large-scale systems},
	volume = {31},
	issn = {0098-5589},
	doi = {10.1109/TSE.2005.69},
	abstract = {Software reuse enables developers to leverage past accomplishments and facilitates significant improvements in software productivity and quality. Software reuse catalyzes improvements in productivity by avoiding redevelopment and improvements in quality by incorporating components whose reliability has already been established. This study addresses a pivotal research issue that underlies software reuse - what factors characterize successful software reuse in large-scale systems. The research approach is to investigate, analyze, and evaluate software reuse empirically by mining software repositories from a {NASA} software development environment that actively reuses software. This software environment successfully follows principles of reuse-based software development in order to achieve an average reuse of 32 percent per project, which is the average amount of software either reused or modified from previous systems. We examine the repositories for 25 software systems ranging from 3,000 to 112,000 source lines from this software environment. We analyze four classes of software modules: modules reused without revision, modules reused with slight revision ({\textless}25 percent revision), modules reused with major revision (≥25 percent revision), and newly developed modules. We apply nonparametric statistical models to compare numerous development variables across the 2,954 software modules in the systems. We identify two categories of factors that characterize successful reuse-based software development of large-scale systems: module design factors and module implementation factors. We also evaluate the fault rates of the reused, modified, and newly developed modules. The module design factors that characterize module reuse without revision were (after normalization by size in source lines): few calls to other system modules, many calls to utility functions, few input-output parameters, few reads and writes, and many comments. The module implementation factors that characterize module reuse without revision were small size in source lines and (after normalization by size in source lines): low development effort and many assignment statements. The modules reused without revision had the fewest faults, fewest faults per source line, and lowest fault correction effor- t. The modules reused with major revision had the highest fault correction effort and highest fault isolation effort as wed as the most changes, most changes per source line, and highest change correction effort. In conclusion, we outline future research directions that build on these software reuse ideas and strategies.},
	number = {6},
	journal = {{IEEE} Transactions on Software Engineering},
	author = {Selby, R.W.},
	month = jun,
	year = {2005},
	keywords = {Computer architecture, Index Terms- Software reuse, {NASA}, {NASA} software development environment, Nonparametric statistical model, Productivity, Programming, Software measurement, Software systems, data mining, empirical study, empirical study., experimentation, fault correction, large-scale systems, mining software repositories, mining software repository, programming environments, reuse-based software development, software change, software changes, software faults, software metrics, software productivity, software quality, software reliability, software reusability, statistical analysis},
	pages = {495--510}
}

@article{frakes_software_1996,
	title = {Software Reuse: Metrics and Models},
	volume = {28},
	issn = {0360-0300},
	shorttitle = {Software Reuse},
	url = {http://doi.acm.org/10.1145/234528.234531},
	doi = {10.1145/234528.234531},
	abstract = {As organizations implement systematic software reuse programs to improve productivity and quality, they must be able to measure their progress and identify the most effective reuse strategies. This is done with reuse metrics and models. In this article we survey metrics and models of software reuse and reusability, and provide a classification structure that will help users select them. Six types of metrics and models are reviewed: cost-benefit models, maturity assessment models, amount of reuse metrics, failure modes models, reusability assessment models, and reuse library metrics.},
	number = {2},
	urldate = {2014-05-28TZ},
	journal = {{ACM} Comput. Surv.},
	author = {Frakes, William and Terry, Carol},
	month = jun,
	year = {1996},
	keywords = {Productivity, Quality, cost-benefit analysis, definitions, economics, maturity assessment, models, object-oriented, reusability, reusability assessment, reuse, reuse level, reuse library metrics, software, software reuse failure modes model},
	pages = {415--435}
}

@article{mohagheghi_quality_2007,
	title = {Quality, productivity and economic benefits of software reuse: a review of industrial studies},
	volume = {12},
	issn = {1382-3256, 1573-7616},
	shorttitle = {Quality, productivity and economic benefits of software reuse},
	url = {http://link.springer.com.libproxy.aalto.fi/article/10.1007/s10664-007-9040-x},
	doi = {10.1007/s10664-007-9040-x},
	abstract = {Systematic software reuse is proposed to increase productivity and software quality and lead to economic benefits. Reports of successful software reuse programs in industry have been published. However, there has been little effort to organize the evidence systematically and appraise it. This review aims to assess the effects of software reuse in industrial contexts. Journals and major conferences between 1994 and 2005 were searched to find observational studies and experiments conducted in industry, returning eleven papers of observational type. Systematic software reuse is significantly related to lower problem (defect, fault or error) density in five studies and to decreased effort spent on correcting problems in three studies. The review found evidence for significant gains in apparent productivity in three studies. Other significant benefits of software reuse were reported in single studies or the results were inconsistent. Evidence from industry is sparse and combining results was done by vote-counting. Researchers should pay more attention to using comparable metrics, performing longitudinal studies, and explaining the results and impact on industry. For industry, evaluating reuse of {COTS} or {OSS} components, integrating reuse activities in software processes, better data collection and evaluating return on investment are major challenges.},
	language = {en},
	number = {5},
	urldate = {2014-05-28TZ},
	journal = {Empirical Software Engineering},
	author = {Mohagheghi, Parastoo and Conradi, Reidar},
	month = oct,
	year = {2007},
	keywords = {Evidence, Productivity, Programming Languages, Compilers, Interpreters, Quality, Review, Software Engineering/Programming and Operating Systems, software reuse},
	pages = {471--516}
}

@article{frakes_software_2005,
	title = {Software reuse research: Status and future},
	volume = {31},
	shorttitle = {Software reuse research},
	url = {http://iknow.seforge.org/classic_bib/classic_paper/8f6f4ef6590d7528/pdfs/C-Documents%20and%20Settings-Administrator-684c9762-7ecf51786587732e-TSE-2005-Software%20Reuse%20Research%20Status%20and%20Future.pdf},
	number = {7},
	urldate = {2014-05-28TZ},
	journal = {{IEEE} transactions on Software Engineering},
	author = {Frakes, William B. and Kang, Kyo},
	month = jul,
	year = {2005},
	pages = {529--536}
}

@incollection{asche_concept_2012-1,
	series = {Lecture Notes in Computer Science},
	title = {From Concept to Implementation: Web-Based Cartographic Visualisation with {CartoService}},
	copyright = {©2012 Springer-Verlag Berlin Heidelberg},
	isbn = {978-3-642-31074-4, 978-3-642-31075-1},
	shorttitle = {From Concept to Implementation},
	url = {http://link.springer.com.libproxy.aalto.fi/chapter/10.1007/978-3-642-31075-1_31},
	abstract = {This paper deals with the implementation and prototypical application of a concept of a web-based on-demand service for the modelling and visualisation of quality maps ({CartoService}, {CS}). Drawing on state-of-the-art web technology and software architecture {CS} can be considered a cartographic customisation of the standard visualisation system. The {CS} architecture is generic and completely based on the use and integration of web-services, more precisely, on a set of loosely coupled, self-contained methods and information units (services). Map modelling and visualisation components are sequentially ordered in a process chain which facilitates an automated production workflow. Interaction between web-service players (communicators) is based on a three-tier architecture. Tasks assigned to {CS} essential services are discussed and exemplified for one common application scenario: {CS} as map configurator. Presently, full implementation of {CS} is under way. As a fully operational product, {CS} will significantly contribute to the enhancement of web-based map visualisation in comparison to existing standards-based map dissemination.},
	number = {7334},
	urldate = {2014-05-26TZ},
	booktitle = {Computational Science and Its Applications – {ICCSA} 2012},
	publisher = {Springer Berlin Heidelberg},
	author = {Asche, Hartmut and Engemaier, Rita},
	editor = {Murgante, Beniamino and Gervasi, Osvaldo and Misra, Sanjay and Nedjah, Nadia and Rocha, Ana Maria A. C. and Taniar, David and Apduhan, Bernady O.},
	month = jan,
	year = {2012},
	keywords = {Algorithm Analysis and Problem Complexity, Computer Communication Networks, Data Mining and Knowledge Discovery, Information Systems Applications (incl. Internet), Simulation and Modeling, Software engineering, cartographic modelling, geovisualisation, quality maps, quality web mapping, web cartography, web services},
	pages = {414--424}
}

@article{iosifescu-enescu_web_2010,
	title = {Web Cartography with Open Standards - A Solution to Cartographic Challenges of Environmental Management},
	volume = {25},
	issn = {1364-8152},
	url = {http://dx.doi.org/10.1016/j.envsoft.2009.10.017},
	doi = {10.1016/j.envsoft.2009.10.017},
	abstract = {The visualization of spatial information in the form of maps is a critical task to facilitate decision making in environmental management. Web Map Services ({WMS}), Styled Layer Descriptor ({SLD}) and Symbology Encoding ({SE}) already created an open framework for Web mapping services. However, from the cartographic point of view, the {OGC} standards have several limitations for producing high quality cartographic representations. Fortunately, these standards can be cartographically enriched to fulfil the complex visualization requirements coming from environmental management. A solution to creating cartographic visualizations based on open standards was developed in the frame of two major European projects, namely {ORCHESTRA} (Open Architecture and Spatial Data Infrastructure for Risk Management) and {SANY} (Sensors Anywhere). For example, the {IST} - 6th Framework Integrated Project {SANY}, focuses on interoperability of in situ sensors and sensor networks. In this context, sensors serve as an extreme illustration for the dynamic nature of spatial information that must be represented in the form of maps. The cartographic extensions for the Symbology Encoding ({SE}) standards allow expressing cartographic rules with spatial operators and advanced feature filtering for layer masking, flexible point symbolization, and patterns and gradients for all spatial features. Furthermore the critical point of creating thematic maps is also solved with extensions for intuitive choropleth and various diagram types generation.},
	number = {9},
	urldate = {2014-05-26TZ},
	journal = {Environ. Model. Softw.},
	author = {Iosifescu-Enescu, Ionut and Hugentobler, Marco and Hurni, Lorenz},
	month = sep,
	year = {2010},
	keywords = {Cartography, Mapping, {OGC}, Sensors anywhere, Standards, risk management, web services},
	pages = {988--999}
}

@inproceedings{engemaier_cartoservice:_2011-1,
	address = {Berlin, Heidelberg},
	series = {{ICCSA}'11},
	title = {{CartoService}: A Web Service Framework for Quality On-demand Geovisualisation},
	isbn = {978-3-642-21927-6},
	shorttitle = {{CartoService}},
	url = {http://dl.acm.org/citation.cfm?id=2029487.2029511},
	abstract = {The last decades have seen a steady increase of digital spatial data and their effective availability. Embedded in the rapid developments in information and communication technology ({ICT}) such geospatial data or geodata are globally accessible, mainly via the internet, in a magnitude unseen before. In a parallel development of geographical information systems, computer-assisted cartography and the internet, a vast variety of web-based services have emerged to capture, store, analyse and present geodata. The map output from these systems is frequently suboptimal, lacking graphic expressiveness and effectiveness. This paper discusses a web-based service framework, the {CartoService}, to improve the geovisualisation quality of mapped geodata and provide laypersons and professionals with quality map graphics.},
	urldate = {2014-05-26TZ},
	booktitle = {Proceedings of the 2011 International Conference on Computational Science and Its Applications - Volume Part I},
	publisher = {Springer-Verlag},
	author = {Engemaier, Rita and Asche, Hartmut},
	year = {2011},
	keywords = {geovisualisation, high quality mapping, on demand mapping, web cartography, web mapping, web services},
	pages = {329--341}
}

@misc{mueller_cartographer.js_2010,
	title = {Cartographer.js},
	url = {http://cartographer.visualmotive.com/},
	author = {Mueller, Chris},
	month = may,
	year = {2010}
}

@article{_visualization_1994,
	title = {Visualization in geographical information systems.},
	abstract = {This book comprises a collection of 23 papers divided into four main sections discussing different aspects of computer based methods for the presentation of data contained in geographical information systems ({GIS}). Section A: visualization of {GIS} ({ViSC} and {GIS}: some fundamental considerations; the traditional map as a visualization technique; visualization in {GIS}, cartography and {ViSC}; cogent {GIS} visualizations; a typology for scientific visualization; state of the art software). Section B: advances in visualizing spatial data (introduction; the role of visual realism in communicating and understanding spatial change and process; density estimation and the visualization of point patterns; towards improved visualization of socioeconomic data; cartograms for visualizing human geography; area-value data: new visual emphases and representations; time as a cartographic variable; the use of map animation as a spatial analysis tool). Section C: visualizing data validity (introduction; graphical and geographical components of data quality; fuzzy maps; contour interpolation accuracy in digital elevation models; animation and sound for the visualization of uncertain spatial information). Section D: human factors in visualization (introduction: the importance of human factors; psychology and displays in {GIS}; human-computer interactions in {GIS}; epistemological aspects).},
	language = {English},
	year = {1994},
	pages = {xv + 243 pp.}
}

@article{kraak_visualization_1999,
	title = {Visualization for exploration of spatial data},
	volume = {13},
	issn = {1365-8816},
	url = {http://dx.doi.org/10.1080/136588199241201},
	doi = {10.1080/136588199241201},
	number = {4},
	urldate = {2014-05-26TZ},
	journal = {International Journal of Geographical Information Science},
	author = {Kraak, Menno-Jan and MacEachren, Alan},
	year = {1999},
	pages = {285--287}
}

@article{pundt_visualization_2000,
	title = {Visualization of spatial data for field based {GIS}},
	volume = {26},
	issn = {0098-3004},
	url = {http://www.sciencedirect.com/science/article/pii/S0098300499000333},
	doi = {10.1016/S0098-3004(99)00033-3},
	abstract = {Field based and {GPS} supported {GIS} are increasingly applied in various spatial disciplines. Such systems represent more sophisticated, time and cost effective tools than traditional field forms for data acquisition. Meanwhile, various systems are on the market. These mostly enable the user to define geo-objects by means of {GPS} information, supported by functionalities to collect and analyze geometric information. The digital acquisition of application specific attributes is often underrepresented within such systems. This is surprising because pen computer based {GIS} can be used to collect attributes in a profitable manner, thus adequately supporting the requirements of the user. Visualization and graphic displays of spatial data are helpful means to improve such a data collection process.
In section one and two basic aspects of visualization and current uses of visualization techniques for field based {GIS} are described. Section three mentions new developments within the framework of wearable computing and augmented reality. Section four describes current activities aimed at the realization of real time online field based {GIS}. This includes efforts to realize an online {GIS} data link to improve the efficiency and the quality of fieldwork. A brief discussion in section five leads to conclusions and some key issues for future research.},
	number = {1},
	urldate = {2014-05-26TZ},
	journal = {Computers \& Geosciences},
	author = {Pundt, Hardy and Brinkkötter-Runde, Klaus},
	month = feb,
	year = {2000},
	keywords = {Data acquisition, {GPS}, Mobile geocomputing, Online {GIS}},
	pages = {51--56}
}

@book{hearnshaw_visualization_1994,
	title = {Visualization in geographical information systems},
	isbn = {9780471944355},
	abstract = {A practical, research-oriented introduction to the principles of scientific visualization applied to Geographic Information Systems ({GIS}). Brings together the world's foremost practitioners to produce an integrated, up-to-the-minute manual concerned with techniques and their applications. Copiously illustrated in line, black and white and full color with many of the color images published for the first time.},
	language = {en},
	publisher = {Wiley \& Sons},
	author = {Hearnshaw, Hilary M. and Unwin, David John},
	year = {1994},
	keywords = {Psychology / General, Science / Earth Sciences / Geography, Technology \& Engineering / Remote Sensing \& Geographic Information Systems, Travel / General}
}

@article{mohagheghi_empirical_2008,
	title = {An Empirical Investigation of Software Reuse Benefits in a Large Telecom Product},
	volume = {17},
	issn = {1049-331X},
	url = {http://doi.acm.org/10.1145/1363102.1363104},
	doi = {10.1145/1363102.1363104},
	abstract = {Background. This article describes a case study on the benefits of software reuse in a large telecom product. The reused components were developed in-house and shared in a product-family approach. Methods. Quantitative data mined from company repositories are combined with other quantitative data and qualitative observations. Results. We observed significantly lower fault density and less modified code between successive releases of the reused components. Reuse and standardization of software architecture and processes allowed easier transfer of development when organizational changes happened. Conclusions. The study adds to the evidence of quality benefits of large-scale reuse programs and explores organizational motivations and outcomes.},
	number = {3},
	urldate = {2014-05-24TZ},
	journal = {{ACM} Trans. Softw. Eng. Methodol.},
	author = {Mohagheghi, Parastoo and Conradi, Reidar},
	month = jun,
	year = {2008},
	keywords = {fault density, product family, risks, software reuse, standardization},
	pages = {13:1--13:31}
}

@inproceedings{aggarwal_software_2005,
	title = {Software reuse metrics for object-oriented systems},
	doi = {10.1109/SERA.2005.60},
	abstract = {The importance of software measurement is increasing leading to development of new measurement techniques. Reusing existing software components is a key feature in increasing software productivity. It is one of the key elements in object-oriented programming, which reduces the cost and increases the quality of the software. An important feature of C++ called templates support generic programming, which allows the programmer to develop reusable software modules such as functions, classes, etc. The need for software reusability metrics is particularly acute for an organization in order to measure the degree of generic programming included in the form of templates in code. This research addresses this need and introduces a new set of metrics for object-oriented software. Two metrics are proposed for measuring amount of genericty included in the code and then analytically evaluated against Weyuker's set of nine axioms. This set of metrics is then applied to standard projects and accordingly ways in which project managers can use these metrics are suggested.},
	booktitle = {Third {ACIS} International Conference on Software Engineering Research, Management and Applications, 2005},
	author = {Aggarwal, K.K. and Singh, Y. and Kaur, A. and Malhotra, R.},
	month = aug,
	year = {2005},
	keywords = {C++ language, C++ template, Costs, Functional programming, Measurement techniques, Object oriented programming, Particle measurements, Productivity, Programming profession, Software measurement, generic programming, object-oriented programming, object-oriented software, object-oriented system, software component reusability, software cost estimation, software cost reduction, software metrics, software performance evaluation, software productivity, software quality, software reusability, software reusability metrics},
	pages = {48--54}
}

@misc{center_for_history_and_new_media_zotero_????,
	title = {Zotero Quick Start Guide},
	url = {http://zotero.org/support/quick_start_guide},
	author = {{Center for History and New Media}}
}